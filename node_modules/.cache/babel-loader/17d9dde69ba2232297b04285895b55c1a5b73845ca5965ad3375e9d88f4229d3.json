{"ast":null,"code":"import { useLocalStorage } from \"../hooks/useLocalStorage\";\nconst request = async (method, token, url, data) => {\n  const options = {};\n  if (method !== \"GET\") {\n    options.method = method;\n    if (data) {\n      options.headers = {\n        \"content-type\": \"application/json\"\n      };\n      options.body = JSON.stringify(data);\n    }\n  }\n  if (token) {\n    options.headers = {\n      ...options.headers,\n      \"X-Authorization\": token\n    };\n  }\n  const response = await fetch(url, options);\n  if (response.status === 204) {\n    return {};\n  }\n  const result = await response.json();\n  if (!response.ok) {\n    throw result;\n  }\n  return result;\n};\nexport const requestFactory = token => {\n  const serializedAuth = localStorage.getItem('auth');\n  const auth = JSON.stringify(serializedAuth);\n  token = auth.accessToken;\n  return {\n    get: request.bind(null, \"GET\", token),\n    post: request.bind(null, \"POST\", token),\n    put: request.bind(null, \"PUT\", token),\n    patch: request.bind(null, \"PATCH\", token),\n    delete: request.bind(null, \"DELETE\", token)\n  };\n};","map":{"version":3,"names":["useLocalStorage","request","method","token","url","data","options","headers","body","JSON","stringify","response","fetch","status","result","json","ok","requestFactory","serializedAuth","localStorage","getItem","auth","accessToken","get","bind","post","put","patch","delete"],"sources":["D:/React kurs/react-app-exam/client/src/services/requester.js"],"sourcesContent":["import {useLocalStorage} from \"../hooks/useLocalStorage\";\r\n\r\nconst request = async (method, token, url, data) => {\r\n  const options = {};\r\n\r\n  if (method !== \"GET\") {\r\n    options.method = method;\r\n\r\n    if (data) {\r\n      options.headers = {\r\n        \"content-type\": \"application/json\",\r\n      };\r\n\r\n      options.body = JSON.stringify(data);\r\n    }\r\n  }\r\n\r\n  if (token) {\r\n    options.headers = {\r\n      ...options.headers,\r\n      \"X-Authorization\": token,\r\n    };\r\n  }\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  if (response.status === 204) {\r\n    return {};\r\n  }\r\n\r\n  const result = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw result;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const requestFactory = (token) => {\r\n    const serializedAuth = localStorage.getItem('auth');\r\n      const auth = JSON.stringify(serializedAuth);\r\n      token = auth.accessToken;\r\n\r\n  return {\r\n    get: request.bind(null, \"GET\", token),\r\n    post: request.bind(null, \"POST\", token),\r\n    put: request.bind(null, \"PUT\", token),\r\n    patch: request.bind(null, \"PATCH\", token),\r\n    delete: request.bind(null, \"DELETE\", token),\r\n  };\r\n};\r\n\r\n"],"mappings":"AAAA,SAAQA,eAAe,QAAO,0BAA0B;AAExD,MAAMC,OAAO,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAClD,MAAMC,OAAO,GAAG,CAAC,CAAC;EAElB,IAAIJ,MAAM,KAAK,KAAK,EAAE;IACpBI,OAAO,CAACJ,MAAM,GAAGA,MAAM;IAEvB,IAAIG,IAAI,EAAE;MACRC,OAAO,CAACC,OAAO,GAAG;QAChB,cAAc,EAAE;MAClB,CAAC;MAEDD,OAAO,CAACE,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACrC;EACF;EAEA,IAAIF,KAAK,EAAE;IACTG,OAAO,CAACC,OAAO,GAAG;MAChB,GAAGD,OAAO,CAACC,OAAO;MAClB,iBAAiB,EAAEJ;IACrB,CAAC;EACH;EAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEE,OAAO,CAAC;EAE1C,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAO,CAAC,CAAC;EACX;EAEA,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;EAEpC,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;IAChB,MAAMF,MAAM;EACd;EAEA,OAAOA,MAAM;AACf,CAAC;AAED,OAAO,MAAMG,cAAc,GAAId,KAAK,IAAK;EACrC,MAAMe,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACjD,MAAMC,IAAI,GAAGZ,IAAI,CAACC,SAAS,CAACQ,cAAc,CAAC;EAC3Cf,KAAK,GAAGkB,IAAI,CAACC,WAAW;EAE5B,OAAO;IACLC,GAAG,EAAEtB,OAAO,CAACuB,IAAI,CAAC,IAAI,EAAE,KAAK,EAAErB,KAAK,CAAC;IACrCsB,IAAI,EAAExB,OAAO,CAACuB,IAAI,CAAC,IAAI,EAAE,MAAM,EAAErB,KAAK,CAAC;IACvCuB,GAAG,EAAEzB,OAAO,CAACuB,IAAI,CAAC,IAAI,EAAE,KAAK,EAAErB,KAAK,CAAC;IACrCwB,KAAK,EAAE1B,OAAO,CAACuB,IAAI,CAAC,IAAI,EAAE,OAAO,EAAErB,KAAK,CAAC;IACzCyB,MAAM,EAAE3B,OAAO,CAACuB,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAErB,KAAK;EAC5C,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}